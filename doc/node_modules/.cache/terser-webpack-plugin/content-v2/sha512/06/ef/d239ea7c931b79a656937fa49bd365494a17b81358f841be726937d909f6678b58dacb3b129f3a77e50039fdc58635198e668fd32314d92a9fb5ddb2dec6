{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{280:function(t,e,s){\"use strict\";s.r(e);var n=s(35),a=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"developer-documentation\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#developer-documentation\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Developer Documentation\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"io\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#io\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" IO\")]),t._v(\" \"),s(\"p\",[s(\"strong\",[s(\"code\",[t._v(\"print\")]),t._v(\":\")])]),t._v(\" \"),s(\"p\",[t._v(\"Prints it's arguments, evaluated to the screen.\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-py extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-py\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"print\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Hello, World\"')]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2.0\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#=> Hello, World 1.0 2.0\")]),t._v(\"\\n\")])])]),s(\"p\",[s(\"strong\",[s(\"code\",[t._v(\"debug\")]),t._v(\":\")])]),t._v(\" \"),s(\"p\",[t._v(\"Prints it's arguments unevaluated to the screen. In other words, this prints\\nthe AST that represents it's arguments. This is printed in Clojure form. If\\nit prooves useful JSON output may be implemented.\")])])},[],!1,null,null,null);a.options.__file=\"README.md\";e.default=a.exports}}]);","extractedComments":[]}